package com.mycompany.entity;
// Generated Feb 23, 2018 5:59:52 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UsersAppUserUs generated by hbm2java
 */
@Entity
@Table(name="Users_AppUserUs"
    ,catalog="Project_DB"
)
public class UsersAppUserUs  implements java.io.Serializable {


     private Integer userId;
     private Departments departments;
     private Gender gender;
     private TitlesType titlesType;
     private String userFirstName;
     private String userSecondName;
     private String userThirdName;
     private String userForthName;
     private String userEmailPrivate;
     private String userEmailWork;
     private String userPassword;
     private String userPasswordConfirm;
     private Date userHireDate;
     private int userNationalId;
     private int userPassportId;
     private int userMobileNumber;
     private Integer userPhoneNumber;
     private int userCardWorkId;
     private String userDesc;
     private Set<Addresses> addresseses = new HashSet<Addresses>(0);
     private Set<UsersImages> usersImageses = new HashSet<UsersImages>(0);

    public UsersAppUserUs() {
    }

	
    public UsersAppUserUs(Departments departments, Gender gender, TitlesType titlesType, String userFirstName, String userSecondName, String userThirdName, String userForthName, String userEmailPrivate, String userEmailWork, String userPassword, String userPasswordConfirm, Date userHireDate, int userNationalId, int userPassportId, int userMobileNumber, int userCardWorkId) {
        this.departments = departments;
        this.gender = gender;
        this.titlesType = titlesType;
        this.userFirstName = userFirstName;
        this.userSecondName = userSecondName;
        this.userThirdName = userThirdName;
        this.userForthName = userForthName;
        this.userEmailPrivate = userEmailPrivate;
        this.userEmailWork = userEmailWork;
        this.userPassword = userPassword;
        this.userPasswordConfirm = userPasswordConfirm;
        this.userHireDate = userHireDate;
        this.userNationalId = userNationalId;
        this.userPassportId = userPassportId;
        this.userMobileNumber = userMobileNumber;
        this.userCardWorkId = userCardWorkId;
    }
    public UsersAppUserUs(Departments departments, Gender gender, TitlesType titlesType, String userFirstName, String userSecondName, String userThirdName, String userForthName, String userEmailPrivate, String userEmailWork, String userPassword, String userPasswordConfirm, Date userHireDate, int userNationalId, int userPassportId, int userMobileNumber, Integer userPhoneNumber, int userCardWorkId, String userDesc, Set<Addresses> addresseses, Set<UsersImages> usersImageses) {
       this.departments = departments;
       this.gender = gender;
       this.titlesType = titlesType;
       this.userFirstName = userFirstName;
       this.userSecondName = userSecondName;
       this.userThirdName = userThirdName;
       this.userForthName = userForthName;
       this.userEmailPrivate = userEmailPrivate;
       this.userEmailWork = userEmailWork;
       this.userPassword = userPassword;
       this.userPasswordConfirm = userPasswordConfirm;
       this.userHireDate = userHireDate;
       this.userNationalId = userNationalId;
       this.userPassportId = userPassportId;
       this.userMobileNumber = userMobileNumber;
       this.userPhoneNumber = userPhoneNumber;
       this.userCardWorkId = userCardWorkId;
       this.userDesc = userDesc;
       this.addresseses = addresseses;
       this.usersImageses = usersImageses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="User_id", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Department_id", nullable=false)
    public Departments getDepartments() {
        return this.departments;
    }
    
    public void setDepartments(Departments departments) {
        this.departments = departments;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gender_Id", nullable=false)
    public Gender getGender() {
        return this.gender;
    }
    
    public void setGender(Gender gender) {
        this.gender = gender;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Title_Id", nullable=false)
    public TitlesType getTitlesType() {
        return this.titlesType;
    }
    
    public void setTitlesType(TitlesType titlesType) {
        this.titlesType = titlesType;
    }

    
    @Column(name="User_FirstName", nullable=false)
    public String getUserFirstName() {
        return this.userFirstName;
    }
    
    public void setUserFirstName(String userFirstName) {
        this.userFirstName = userFirstName;
    }

    
    @Column(name="User_SecondName", nullable=false)
    public String getUserSecondName() {
        return this.userSecondName;
    }
    
    public void setUserSecondName(String userSecondName) {
        this.userSecondName = userSecondName;
    }

    
    @Column(name="user_ThirdName", nullable=false)
    public String getUserThirdName() {
        return this.userThirdName;
    }
    
    public void setUserThirdName(String userThirdName) {
        this.userThirdName = userThirdName;
    }

    
    @Column(name="User_ForthName", nullable=false)
    public String getUserForthName() {
        return this.userForthName;
    }
    
    public void setUserForthName(String userForthName) {
        this.userForthName = userForthName;
    }

    
    @Column(name="User_Email_Private", nullable=false)
    public String getUserEmailPrivate() {
        return this.userEmailPrivate;
    }
    
    public void setUserEmailPrivate(String userEmailPrivate) {
        this.userEmailPrivate = userEmailPrivate;
    }

    
    @Column(name="User_Email_Work", nullable=false)
    public String getUserEmailWork() {
        return this.userEmailWork;
    }
    
    public void setUserEmailWork(String userEmailWork) {
        this.userEmailWork = userEmailWork;
    }

    
    @Column(name="User_Password", nullable=false)
    public String getUserPassword() {
        return this.userPassword;
    }
    
    public void setUserPassword(String userPassword) {
        this.userPassword = userPassword;
    }

    
    @Column(name="User_Password_Confirm", nullable=false)
    public String getUserPasswordConfirm() {
        return this.userPasswordConfirm;
    }
    
    public void setUserPasswordConfirm(String userPasswordConfirm) {
        this.userPasswordConfirm = userPasswordConfirm;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="User_HireDate", nullable=false, length=10)
    public Date getUserHireDate() {
        return this.userHireDate;
    }
    
    public void setUserHireDate(Date userHireDate) {
        this.userHireDate = userHireDate;
    }

    
    @Column(name="User_National_Id", nullable=false)
    public int getUserNationalId() {
        return this.userNationalId;
    }
    
    public void setUserNationalId(int userNationalId) {
        this.userNationalId = userNationalId;
    }

    
    @Column(name="User_Passport_Id", nullable=false)
    public int getUserPassportId() {
        return this.userPassportId;
    }
    
    public void setUserPassportId(int userPassportId) {
        this.userPassportId = userPassportId;
    }

    
    @Column(name="User_Mobile_Number", nullable=false)
    public int getUserMobileNumber() {
        return this.userMobileNumber;
    }
    
    public void setUserMobileNumber(int userMobileNumber) {
        this.userMobileNumber = userMobileNumber;
    }

    
    @Column(name="User_Phone_Number")
    public Integer getUserPhoneNumber() {
        return this.userPhoneNumber;
    }
    
    public void setUserPhoneNumber(Integer userPhoneNumber) {
        this.userPhoneNumber = userPhoneNumber;
    }

    
    @Column(name="User_Card_Work_Id", nullable=false)
    public int getUserCardWorkId() {
        return this.userCardWorkId;
    }
    
    public void setUserCardWorkId(int userCardWorkId) {
        this.userCardWorkId = userCardWorkId;
    }

    
    @Column(name="User_Desc")
    public String getUserDesc() {
        return this.userDesc;
    }
    
    public void setUserDesc(String userDesc) {
        this.userDesc = userDesc;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersAppUserUs")
    public Set<Addresses> getAddresseses() {
        return this.addresseses;
    }
    
    public void setAddresseses(Set<Addresses> addresseses) {
        this.addresseses = addresseses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersAppUserUs")
    public Set<UsersImages> getUsersImageses() {
        return this.usersImageses;
    }
    
    public void setUsersImageses(Set<UsersImages> usersImageses) {
        this.usersImageses = usersImageses;
    }




}


