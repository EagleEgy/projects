package com.mycompany.entity;
// Generated Feb 23, 2018 5:59:52 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Companies generated by hbm2java
 */
@Entity
@Table(name="Companies"
    ,catalog="Project_DB"
)
public class Companies  implements java.io.Serializable {


     private Integer companyId;
     private Status status;
     private TypeCompanies typeCompanies;
     private String companyName;
     private Set<CompanyProductServices> companyProductServiceses = new HashSet<CompanyProductServices>(0);
     private Set<ContactsInformation> contactsInformations = new HashSet<ContactsInformation>(0);
     private Set<DepartmentsCompanies> departmentsCompanieses = new HashSet<DepartmentsCompanies>(0);

    public Companies() {
    }

	
    public Companies(Status status, TypeCompanies typeCompanies, String companyName) {
        this.status = status;
        this.typeCompanies = typeCompanies;
        this.companyName = companyName;
    }
    public Companies(Status status, TypeCompanies typeCompanies, String companyName, Set<CompanyProductServices> companyProductServiceses, Set<ContactsInformation> contactsInformations, Set<DepartmentsCompanies> departmentsCompanieses) {
       this.status = status;
       this.typeCompanies = typeCompanies;
       this.companyName = companyName;
       this.companyProductServiceses = companyProductServiceses;
       this.contactsInformations = contactsInformations;
       this.departmentsCompanieses = departmentsCompanieses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Company_Id", unique=true, nullable=false)
    public Integer getCompanyId() {
        return this.companyId;
    }
    
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Status_Id", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="company_id_type", nullable=false)
    public TypeCompanies getTypeCompanies() {
        return this.typeCompanies;
    }
    
    public void setTypeCompanies(TypeCompanies typeCompanies) {
        this.typeCompanies = typeCompanies;
    }

    
    @Column(name="Company_Name", nullable=false)
    public String getCompanyName() {
        return this.companyName;
    }
    
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="companies")
    public Set<CompanyProductServices> getCompanyProductServiceses() {
        return this.companyProductServiceses;
    }
    
    public void setCompanyProductServiceses(Set<CompanyProductServices> companyProductServiceses) {
        this.companyProductServiceses = companyProductServiceses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="companies")
    public Set<ContactsInformation> getContactsInformations() {
        return this.contactsInformations;
    }
    
    public void setContactsInformations(Set<ContactsInformation> contactsInformations) {
        this.contactsInformations = contactsInformations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="companies")
    public Set<DepartmentsCompanies> getDepartmentsCompanieses() {
        return this.departmentsCompanieses;
    }
    
    public void setDepartmentsCompanieses(Set<DepartmentsCompanies> departmentsCompanieses) {
        this.departmentsCompanieses = departmentsCompanieses;
    }




}


